service: python-thumbnail

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.8
  region: us-east-1
  profile: serverless-admin
  stage: dev
  timeout: 10
  memorySize: 128
  layers:
    - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p38-Pillow:2
  environment:
    THUMBNAIL_SIZE: 128
    REGION_NAME: ${self:provider.region}
    DYNAMODB_TABLE : ${self:custom.dynamoTable}
  
  iam:
    role:
      statements:
       - Effect: 'Allow'
         Resource: '*'
         Action: 's3:*'
       - Effect: 'Allow'
         Resource: 'arn:aws:dynamodb:${opt:region, self:provider.region}:*table/${self:provider.environment.DYNAMODB_TABLE}'
         Action: 'dynamodb:*'

custom:
  bucket: marcolelis-thumbnails
  dynamoTable: img-url-table
  pythonRequirements:
    dockerizePip: true

functions:
  s3_thumbnail_generator:
    handler: handler.s3_thumbnail_generator
    events:
      - s3: 
          bucket: ${self:custom.bucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .png


resources:
  Resources:
    ImagesDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
  


plugins:
  - serverless-python-requirements
